default_border none
default_floating_border pixel 1
hide_edge_borders --i3 smart
workspace_layout tabbed
font sans 10.5
#                       border  backgr. text
client.focused          #222222 #4285F4 #eeeeee
client.focused_inactive #222222 #555555 #eeeeee
client.unfocused        #222222 #555555 #eeeeee
client.urgent           #222222 #555555 #eeeeee

focus_follows_mouse no

exec 'swayidle -w \
	timeout 595 "swaymsg \"[title=.] opacity 0.7\"" \
		resume "swaymsg \"[title=.] opacity 1\"" \
	timeout 597 "swaymsg \"[title=.] opacity 0.5\"" \
	timeout 598 "swaymsg \"[title=.] opacity 0.2\"" \
	timeout 600 "swaymsg \"[title=.] opacity 1; output * dpms off; exec /usr/local/bin/lock\"" \
		resume "swaymsg \"output * dpms on\"" \
	before-sleep "/usr/local/bin/lock"; \
	swaymsg exit'
# note that closing swayidle leads to closing sway too
# also sway config is done in such a way that, swayidle can't be disabled by a normal user

# inhibit idle does not work for X11 apps; at least, inhibit idle when they are fullscreen
for_window [class=.] inhibit_idle fullscreen

bindsym --release Alt_L exec sh /usr/local/share/sway-apps.sh
bindsym --release Alt_R exec sh /usr/local/share/sway-apps.sh

mode app_launcher {
	bindsym Return focus; mode default; exec sh /usr/local/share/sway-session.sh
	bindsym Alt_L focus; mode default; workspace back_and_forth; \
		exec "swaymsg '[con_id=__focused__] focus' || { \
			swaymsg workspace back_and_forth; \
			sh /usr/local/share/sway-apps.sh; \
		}"
	bindsym Alt_R focus; mode default; workspace back_and_forth; \
		exec "swaymsg '[con_id=__focused__] focus' || { \
			swaymsg workspace back_and_forth; \
			sh /usr/local/share/sway-apps.sh; \
		}"
}

mode session_manager {
	bindsym Return focus; mode default
	bindsym Alt_L focus; mode default
	bindsym Alt_R focus; mode default
}

bindsym Mod1+space [workspace=__focused__ floating] kill; focus next
bindsym Mod1+Tab [workspace=__focused__ floating] kill; focus next
focus_wrapping workspace

bindsym Mod1+Return kill

bindsym Mod1+s grim -o "$$HOME/.cache/screen.png" | wl-copy --type text/uri-list "file://$$HOME/.cache/screen.png"
# screen recording must be done using gstreamer1.0-pipewire (like in Kooha, and GnomeShell)
# at the moment, there is no program which does that
# https://wiki.archlinux.org/title/Screen_capture
# the screencast will be saved at "~/.cache/screen.mp4"
# save the pid of screen recording program in "~/.cache/scrrec-pid", and at the end delete it
exec_always rm "$$HOME/.cache/scrrec-pid"
# suppose that "screencap" is a Glib based application which implements unique instance
# so we can use the same keybinding to start and stop recording
# bindsym Mod1+r exec screencap

bar {
	position bottom
	colors {
		background #222222
		statusline #eeeeee
		#                  border  backgr. text
		focused_workspace  #222222 #555555 #555555
		active_workspace   #222222 #555555 #555555
		inactive_workspace #222222 #555555 #555555
		urgent_workspace   #222222 #555555 #555555
	}
	strip_workspace_name yes
	font pango:sans, monospace, ForkAwesome 10.5
	pango_markup enabled
	status_command sh /usr/local/share/sway-status.sh
	bindsym button1 exec sh /usr/local/share/sway-apps.sh
	bindsym button3 exec sh /usr/local/share/sway-session.sh
}

exec "foot --server -c /usr/local/share/foot.ini"

# change default font size of GTK apps from 10 to 10.5
exec_always {
	gsettings set org.gnome.desktop.interface font-name 'sans 10.5'
	gsettings set org.gnome.desktop.interface document-font-name 'sans 10.5'
	gsettings set org.gnome.desktop.interface monospace-font-name 'monospace 10.5'
	# and for xwayland apps:
	mkdir -p ~/.config/gtk-3.0 ~/.config/gtk-4.0
	"[ -f ~/.config/gtk-3.0/settings.ini ] || \
		printf '[Settings]\ngtk-font-name = Sans 10.5\n' > ~/.config/gtk-3.0/settings.ini"
	"[ -f ~/.config/gtk-4.0/settings.ini ] || cp ~/.config/gtk-3.0/settings.ini ~/.config/gtk-4.0/"
}

workspace codev
exec sh -c "codev || { swaymsg workspace 0; sh /usr/local/share/sway-apps.sh; }"
